#!/bin/bash

snap() {
    local vol target
    vol="$(readlink -e "$1")"
    target="$2"

    if [ -e "$target" ]; then
        echo "Target \"$target\" already exists. Exiting."
        exit 1
    fi

    btrfs subvolume snapshot "$vol" "$target" || exit $?

    local realvol="$vol"
    while ! btrfs subvolume list -at "$vol" | tail -n+3 | cut -f5- |
        sed "s/<FS_TREE>\///" | sort | grep -q "^$realvol\$"
    do
        realvol="${realvol#*/}"
    done

    local nested
    readarray -t nested < <(
    btrfs subvolume list -at "$vol" | tail -n+3 | cut -f5- | \
        sed "s/<FS_TREE>\///" | grep "^$realvol/" | sort
    )

    local nvol
    for nvol in "${nested[@]}"; do
        relapath="${nvol#$realvol/}"

        local exclude_match=
        for exclude in "${excludes[@]}"; do
            # "exclude" can contain patterns, so do not quote!
            # shellcheck disable=SC2053
            if [[ "/$relapath/" = ${exclude%/}/* ]]; then
                exclude_match=1
                break
            fi
        done

        if [ "$exclude_match" ]; then
            continue
        fi

        rmdir "$target/$relapath"
        btrfs subvolume snapshot "$vol/$relapath" "$target/$relapath"
    done
}

delete() {
    local vol to_delete=()
    for vol in "$@"; do
        vol="$(realpath "$vol")"

        local realvol="$vol"
        while ! btrfs subvolume list -at "$vol" | tail -n+3 | cut -f5- |
            sed "s/<FS_TREE>\///" | sort | grep -q "^$realvol\$"
        do
            if [[ ! "$realvol" =~ "/" ]]; then
                echo "Subvolume \"$vol\" not found. Exiting."
                exit 1
            fi
            realvol="${realvol#*/}"
        done

        local nested
        readarray -t nested < <(
        btrfs subvolume list -at "$vol" | tail -n+3 | cut -f5- | \
            sed "s/<FS_TREE>\///" | grep "^$realvol/" | sort -r
        )

        local nvol
        for nvol in "${nested[@]}"; do
            to_delete+=("$vol/${nvol#$realvol/}")
        done

        to_delete+=("$vol")
    done

    if [ "$interactive" ]; then
        local to_delete_output yn
        printf -v to_delete_output ', "%s"' "${to_delete[@]}"
        echo "The following subvolumes will be deleted, in this order:"
        echo "${to_delete_output:2}"
        echo
        read -rp "Do you really want to continue (y|N)? " yn
        if [[ "$yn" != [Yy] ]]; then
            echo "Deletion aborted."
            return 1
        fi
    fi

    for nvol in "${to_delete[@]}" "$vol"; do
        btrfs property set -ts "$nvol" ro false
    done
    btrfs subvolume delete "${to_delete[@]}"
}

main() {
    local delete interactive
    local excludes=()

    while true; do
        case "$1" in
            -d)
                shift
                delete=1
                ;;
            -i)
                shift
                interactive=1
                ;;
            -e | --exclude)
                shift
                excludes+=("$1")
                shift
                ;;
            *)
                break
                ;;
        esac
    done

    if [ "$delete" ]; then
        delete "$@"
    else
        snap "$@"
    fi
}

main "$@"
